/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>
using namespace std; 

class numbers {
    // always first specify the class access specifier / modifier 
    private: 
    int a; // class member type 
    int paa; // class member type
    int paaa; 
    
    public :
    void fcn1(int aa) { // should be defined / declared inside the class scope
    // should be with int a inside as passing the input parameters/arguments 
    a = aa; 
    paa = a*a;
    paaa = a*a*a; 
    cout << paa << endl; 
    cout << paaa << endl; 
} // this void function is to be defined inside the class with this syntax 
// make the friend fcn here: 
friend void friendfcn1(numbers N); 
};

// making a friend function 
void friendfcn1(numbers N) {
    cout << "results from friend fcn: " << N.paa << endl; // note the syntax: paa.N where N is object 
    cout << "results from friend fcn: " << N.paaa << endl; 
}

int main()
{
    // first make an object of the class 
    numbers N; 
    N.fcn1(10); // invoke the function  --- method 1 
    friendfcn1(N); 

    return 0;
}

/*
/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>
using namespace std; 

class cname {
    private : // private means that members cannot be accessed outside the class 
    int a; // class member data type 
    int pa;
    int paa; 
    int fac;
    public: // defining the function under public access specifier means we can access the function outside class
    void fcn1 (int number) {
        a = number; 
        pa = a*a;
        paa = a*a*a;
        fac = 1; // initialize fac first
        for (int i=1; i<=fac; i++) { 
            fac = fac*i; 
        } // curly bracket to end the for loop 
        cout << a << endl; 
        cout << pa << endl; 
        cout << paa << endl; 
        cout << fac << endl;
        // now you can invoke this fcn1 function in the main body of the program 
    }
    friend void friendfcn1(cname N); 
    
    
}; // do not forget this semicolon for the ending curly bracket of the class 
// another method is to use friend function to access the private section in the class 
void friendfcn1(cname N) {
    cout << "friend fcn: " << N.a << endl;
    cout << "friend fcn: " << N.pa << endl;
    cout << "friend fcn: " << N.paa << endl;
    cout << "friend fcn: " << N.fac << endl; 
}

int main()
{
    // in the main body of the program, first define the Object of the class 
    cname N; // N is the object of class titled: cname 
    // below is syntax for invoking the class function
    N.fcn1(3);
    // below is invoking the friend fcn 
    friendfcn1(N);

    return 0;
}
*/
