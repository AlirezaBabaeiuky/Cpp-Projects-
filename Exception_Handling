// exception_handling.cpp
// This program demonstrates the usage of exception handling in C++

#include <iostream> // Include the iostream library for input and output
#include <stdexcept> // Include the stdexcept library for standard exceptions

using namespace std; // Use the standard namespace to avoid prefixing std::

// Function that throws an exception if the divisor is zero
double divide(double numerator, double divisor) {
    if (divisor == 0) {
        throw invalid_argument("Division by zero!");
    }
    return numerator / divisor;
}

// The main function is the entry point of the program
int main() {
    double num = 10.0, div = 0.0, result;

    try {
        // Attempt to divide by zero
        result = divide(num, div);
        cout << "Result: " << result << endl;
    } catch (const invalid_argument& e) {
        // Catch the exception and handle it
        cout << "Error: " << e.what() << endl;
    }

    // Continue execution
    cout << "End of program" << endl;

    return 0; // Return 0 to indicate successful completion
}
