// polymorphism.cpp
// This program demonstrates the usage of polymorphism in C++

#include <iostream> // Include the iostream library for input and output

using namespace std; // Use the standard namespace to avoid prefixing std::

// Base class
class Animal {
public:
    // Virtual method to be overridden by derived classes
    virtual void makeSound() {
        cout << "Animal sound" << endl;
    }
};

// Derived class inheriting from Animal
class Dog : public Animal {
public:
    // Override the makeSound method
    void makeSound() override {
        cout << "Bark" << endl;
    }
};

// Another derived class inheriting from Animal
class Cat : public Animal {
public:
    // Override the makeSound method
    void makeSound() override {
        cout << "Meow" << endl;
    }
};

// The main function is the entry point of the program
int main() {
    // Creating pointers to base class
    Animal* animal1 = new Dog();
    Animal* animal2 = new Cat();

    // Calling the makeSound method for each object
    cout << "Dog: ";
    animal1->makeSound();

    cout << "Cat: ";
    animal2->makeSound();

    // Cleaning up dynamically allocated memory
    delete animal1;
    delete animal2;

    return 0; // Return 0 to indicate successful completion
}
